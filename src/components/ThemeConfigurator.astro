---
import siteConfig from "../config/site.json";
import SettingWheel from "../assets/SettingWheel.astro";
import Sun from "../assets/Sun.astro";
import Moon from "../assets/Moon.astro";
import Close from "../assets/Close.astro";
---

<button
  id="config-toggle"
  class="fixed bottom-4 right-4 sm:top-4 sm:bottom-auto p-2 rounded-lg bg-white dark:bg-neutral-800 hover:opacity-80 transition-all shadow-lg z-50"
  aria-label="Toggle theme configurator"
>
  <SettingWheel class="w-5 h-5 text-gray-700 dark:text-gray-300" />
</button>

<div
  id="theme-config"
  class="fixed bottom-4 sm:bottom-auto sm:top-4 right-16 p-3 sm:p-4 bg-white/90 dark:bg-neutral-800/90 backdrop-blur-md rounded-xl shadow-lg transform scale-0 opacity-0 transition-all duration-200 origin-bottom-right sm:origin-top-right z-40 w-[200px] sm:w-[280px]"
>
  <button
    id="close-config"
    class="absolute top-2 right-2 p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 transition-colors"
    aria-label="Close theme configurator"
  >
    <Close class="w-4 h-4" />
  </button>

  <div class="mb-3 sm:mb-4">
    <h3 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
      Theme
    </h3>
    <div class="flex gap-2">
      <button
        class="theme-btn p-2 rounded-lg bg-gray-100 dark:bg-neutral-700 hover:opacity-80 transition-colors"
        data-theme="light"
        aria-label="Light theme"
      >
        <Sun class="w-5 h-5 text-amber-500" />
      </button>
      <button
        class="theme-btn p-2 rounded-lg bg-gray-100 dark:bg-neutral-700 hover:opacity-80 transition-colors"
        data-theme="dark"
        aria-label="Dark theme"
      >
        <Moon class="w-5 h-5 text-blue-400" />
      </button>
    </div>
  </div>

  <div>
    <h3 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
      Accent
    </h3>
    <div class="flex flex-wrap gap-2">
      {
        siteConfig.accentColors.map((color) => (
          <button
            class="color-btn w-6 h-6 rounded-full hover:opacity-80 transition-opacity border-2 border-transparent"
            style={`background-color: ${color.value};`}
            data-color={color.value}
            aria-label={`${color.name} accent`}
          />
        ))
      }
    </div>
  </div>
</div>

<script>
  import siteConfig from "../config/site.json";
  import {
    updateActiveStates,
    adjustColor,
    hide,
    show,
    switchAccent,
    switchTheme,
  } from "../util";

  const root = document.documentElement;
  const themeButtons: NodeListOf<HTMLButtonElement> =
    document.querySelectorAll(".theme-btn");
  const colorButtons: NodeListOf<HTMLButtonElement> =
    document.querySelectorAll(".color-btn");
  const configToggle = document.getElementById("config-toggle") as HTMLElement;
  const themeSwitch = document.getElementById("theme-config") as HTMLElement;
  const closeButton = document.getElementById("close-config") as HTMLElement;

  const currentAccent =
    localStorage.getItem("accent-color") || siteConfig.accentColors[0].value;

  root.style.setProperty("--accent-light", currentAccent);
  root.style.setProperty("--accent-dark", adjustColor(currentAccent, 20));

  updateActiveStates(root, themeButtons, colorButtons);

  document.addEventListener("click", (e) => {
    const target = e.target as HTMLElement;
    const isConfiguratorClick = themeSwitch.contains(target);
    const isToggleClick = configToggle.contains(target);

    if (
      !isConfiguratorClick &&
      !isToggleClick &&
      themeSwitch.classList.contains("scale-100")
    ) {
      hide(themeSwitch);
    }
  });
  configToggle.addEventListener("click", () => {
    const isVisible = themeSwitch.classList.contains("scale-100");
    isVisible ? hide(themeSwitch) : show(themeSwitch);
  });
  themeButtons.forEach((btn) => {
    btn.addEventListener("click", (e) => {
      const theme = btn.dataset.theme as "dark" | "light";
      switchTheme(root, theme);
      updateActiveStates(root, themeButtons, colorButtons);
    });
  });
  colorButtons.forEach((btn) => {
    btn.addEventListener("click", () => {
      const color = btn.dataset.color || siteConfig.accentColors[0].value;
      switchAccent(root, color);
      updateActiveStates(root, themeButtons, colorButtons);
    });
  });
  closeButton.addEventListener("click", () => hide(themeSwitch));
</script>
